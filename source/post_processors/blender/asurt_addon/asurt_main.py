bl_info = {
    "name": "ASURTCDT",
    "author": "Khaled Ghobashy",
    "version": (1, 0, 0),
    "blender": (2, 7, 9),
    "description": "Visualize Animations Generated by ASURTCDT",
    "category": "3D View"
    }

import sys

#asurt_path = r'C:\Users\khaled.ghobashy\Desktop\Khaled Ghobashy\Mathematical Models\asurt_cdt_symbolic'
asurt_path = 'E:\\Main\\asurt_cdt_symbolic'
if asurt_path not in sys.path:
    sys.path.append(asurt_path)

import bpy
from bpy.types import Panel


#Panels http://www.blender.org/api/blender_py...
class ASURT_Panel(Panel):
    bl_space_type =  'VIEW_3D'
    bl_region_type = 'TOOLS'
    bl_label = "System Files"  
    bl_context = "objectmode"
    bl_category = "ASURT"

    def draw(self, context):
        layout = self.layout
        
        row = layout.row()
        row.operator("bpy.ops.buttons.file_browse")
        row.prop(context.scene, 'scpt_path')
        
        row = layout.row()
        row.operator("bpy.ops.buttons.file_browse")
        row.prop(context.scene, 'cfg_path')
        
        row = layout.row()
        row.operator("bpy.ops.buttons.file_browse")
        row.prop(context.scene, 'sim_path')
        
        row = layout.row()
        row.operator("object.run_script")
        

class runScript(bpy.types.Operator):
    """Tooltip"""
    # was bl_idname = "object.run_script" - is now:
    bl_idname = "object.run_script"
    bl_label = "Load Files"

    @classmethod
    def poll(cls, context):
        return context.active_object is not None

    def execute(self, context):
        bpy.ops.script.python_file_run(filepath=bpy.data.scenes["Scene"].scpt_path)
        try:
            bpy.context.scene.objects.active = bpy.data.objects['Cube']
            bpy.ops.object.delete()
        except KeyError:
            pass

        return {'FINISHED'}        

def register():
    bpy.utils.register_module(__name__)
    
    bpy.types.Scene.scpt_path = bpy.props.StringProperty \
      (name = "Script File",
      default = "%s//use_cases//generated_templates//blender_scripts//test.py"%asurt_path,
      description = "Define the script file of the system.",
      subtype = 'FILE_PATH')
    
    bpy.types.Scene.cfg_path = bpy.props.StringProperty \
      (name = "Config. Data",
      default = "%s//use_cases//generated_templates//configurations//test.py"%asurt_path,
      description = "Define the config. file of the system.",
      subtype = 'FILE_PATH')
      
    bpy.types.Scene.sim_path = bpy.props.StringProperty \
      (name = "Simulation Data",
      default = "%s//use_cases//simulations//sim_asurt17.csv"%asurt_path,
      description = "Define the simulation results file of the system.",
      subtype = 'FILE_PATH')
      
      
      
def unregister():
    bpy.utils.unregister_module(__name__)
    del bpy.types.Scene.scpt_path
    del bpy.types.Scene.cfg_path
    del bpy.types.Scene.sim_path
    

if __name__ == "__main__":
    register()

print("Loaded ASURT-CDT")